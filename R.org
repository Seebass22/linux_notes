* GENERAL
** function documentation (R console)
   #+begin_src R
     ?sum
   #+end_src

** generate vector
   - : operator
     #+begin_src R
       c(1:5)
       ## [1] 1 2 3 4 5
     #+end_src
** seq(start, end, inc_amount)
   #+begin_src R
     seq(0, 15, 5)
     ## [1] 0 5 10 15
   #+end_src

* MISC 
** integer division
   a %/% b

** integration
   integrate(f, lower, upper)
   
** summary
   calculate Min, 1st Qu, Median, Mean, 3rd Qu, Max. 
   #+begin_src R
     nums = c(16, 1, 2, 4, 0, 2, 7, 1, 2, 14)
     summary(nums)
   #+end_src


* COMBINATORICS
** calculate binomial coefficient
   choose(n,k)

** binomial distribution
   - probability of k ourcomes in n trials, where probability of outcome is p
   dbinom(n, k, p)

** quiz with 12 questions, 5 choices, probability of exactly 4 correct answers
   dbinom(4, 12, 0.2)
** probability of 4 or less correct answers
   pbinom(4, 12, 0.2)

** sum 1 to 100
** pbinom(q, size, prob, lower.tail=TRUE)
   pbinom(0, 100, 0.00720, lower.tail=FALSE)

** beta distribution probability density function
   - dbeta(p, α, β)
   - coin flip with 109 heads, 111 tails. probability that chance of heads is 45-55%
   integrate(function(p) dbeta(p, 109, 111), 0.45, 0.55)

* RANDOM VALUES
** generate n random values from 0 to 1
   #+begin_src R
     runif(2)
     ## [1] 0.3165484 0.7841279
   #+end_src
** optional parameters for min, max

** sample from vector (only use values once)
   - sample(vec, size)
     #+begin_src R
       socks <- c("red", "grey", "white", "red", "black")
       sample(socks, 2)
       ## [1] "grey" "red"
     #+end_src
** with replacement
   #+begin_src R
     sample(socks, 8, replace=TRUE)
   #+end_src

* LOOPS AND CONDITIONALS
  #+BEGIN_SRC R
  while (expression) {
  }

  x <- c(2,5,3,9,8,11,6)
  for (val in x){
  }

  if (expression) {
  } else {
  }
  #+END_SRC R

** ifelse(test, yes, no)
   #+begin_src R
     x <- c(1,2,3)
     ifelse(x < 3, "small", "too big")
     ## [1] "small"    "small"    "too big"
   #+end_src

* FUNCTIONS
  #+BEGIN_SRC R
    get_fuel <- function(mass) {
      result <- mass / 3 + 1
      return(result)
    }
  #+END_SRC

* READING FILES
  #+begin_src R
    my.data <- read.table("input.txt", header=FALSE)
  #+end_src
